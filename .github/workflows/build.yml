name: build

on:
  workflow_call:
    inputs:
      push:
        description: "Push built image"
        default: true
        required: false
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    outputs:
      names: ${{ steps.names.outputs.names }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - id: names
        run: echo "names=$(find . -maxdepth 1 -type f -name '*.dockerfile' -printf '%P\n' | sort | jq -cnR '[inputs | sub("\\.[^.]+?$"; "")]')" | tee "$GITHUB_OUTPUT"

  image:
    needs: setup
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        name: ${{ fromJSON(needs.setup.outputs.names) }}

    timeout-minutes: 15
    env:
      IMAGE: ghcr.io/${{ github.repository }}/${{ matrix.name }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.IMAGE }}

      - id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.name }}.dockerfile
          pull: true
          push: ${{ inputs.push }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          annotations: ${{ steps.docker_meta.outputs.annotations }}
          cache-from: |
            ${{ steps.docker_meta.outputs.tags }}
            ${{ env.IMAGE }}:${{ github.event.repository.default_branch }}
          cache-to: type=inline

      - id: podman_pull
        run: |
          imageid="$(podman pull "docker-daemon:$IMAGE_ID")"
          echo "imageid=$imageid" | tee "$GITHUB_OUTPUT"
        env:
          IMAGE_ID: ${{ steps.docker_build.outputs.imageid }}

      - id: gnome-session-x11
        name: Test gnome-session-x11
        run: test/test-x11.sh "$IMAGE_ID"
        env:
          IMAGE_ID: ${{ steps.podman_pull.outputs.imageid }}

      - id: gnome-session-wayland
        name: Test gnome-session-wayland
        run: test/test-wayland.sh "$IMAGE_ID"
        env:
          IMAGE_ID: ${{ steps.podman_pull.outputs.imageid }}

      - name: Upload screenshot
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.name }}-screenshots
          path: test/*.png
        if: always() && steps.podman_pull.outcome == 'success'
